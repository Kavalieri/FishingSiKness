name: release-please

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🚀 Run Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: simple
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .github/release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: 🎮 Update Release with Enhanced Description
        if: steps.release.outputs.release_created
        run: |
          # Crear descripción mejorada desde template
          cp .github/release-template.md release_description.md

          # Reemplazar placeholder de versión
          sed -i "s/{VERSION}/${{ steps.release.outputs.tag_name }}/g" release_description.md

          # Obtener el body actual de la release y anexar
          CURRENT_BODY=$(gh release view ${{ steps.release.outputs.tag_name }} --json body -q .body)

          # Combinar nueva descripción con changelog existente
          cat release_description.md > final_description.md
          echo "$CURRENT_BODY" >> final_description.md

          # Actualizar la release con la nueva descripción
          gh release edit ${{ steps.release.outputs.tag_name }} --notes-file final_description.md --prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: � Build Upload Instructions
        if: steps.release.outputs.release_created
        run: |
          echo "🎉 Release ${{ steps.release.outputs.tag_name }} creada exitosamente!"
          echo ""
          echo "� Para adjuntar builds a esta release, ejecuta desde tu máquina local:"
          echo ""
          echo "# Windows builds:"
          echo "gh release upload ${{ steps.release.outputs.tag_name }} build/builds/windows/latest/*.exe --clobber"
          echo ""
          echo "# Android builds:"
          echo "gh release upload ${{ steps.release.outputs.tag_name }} build/builds/android/latest/*.apk --clobber"
          echo "gh release upload ${{ steps.release.outputs.tag_name }} build/builds/android/latest/*.aab --clobber"
          echo ""
          echo "🚀 O usa el workflow manual 'Upload Builds to Latest Release' desde GitHub Actions"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
